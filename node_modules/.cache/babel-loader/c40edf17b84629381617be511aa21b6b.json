{"ast":null,"code":"var _jsxFileName = \"/Users/harmbruins/Documents/Ventus Projects/testprofessionalfrontend/src/components/kit/widgets/Tables/implementations/ProjectTableWide/index.js\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, InputNumber, Popconfirm, Form, Button } from 'antd';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = ({\n  service\n}) => ({\n  projects: service.projects\n});\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? /*#__PURE__*/React.createElement(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 64\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), editing ? /*#__PURE__*/React.createElement(Form.Item, {\n    name: dataIndex,\n    style: {\n      margin: 0\n    },\n    rules: [{\n      required: true,\n      message: `Please Input ${title}!`\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, inputNode) : children);\n};\n\nconst ProjectTableWide = props => {\n  const {\n    projects = []\n  } = props;\n  const [form] = Form.useForm();\n  const [data, setData] = useState(projects);\n  const [editingKey, setEditingKey] = useState('');\n  const [userInput, setUserInput] = useState(false);\n\n  const isEditing = record => record.id === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      lead: '',\n      ...record\n    });\n    setEditingKey(record.id);\n  };\n\n  const sessionStorageStoreDataSetId = () => {\n    sessionStorage.setItem('datasetId', 1);\n    console.log(sessionStorage.getItem('datasetId'));\n  };\n\n  const openProject = () => {\n    if (userInput === true) {\n      console.log('open project');\n      sessionStorageStoreDataSetId();\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/apps/dataset-management',\n          state: {\n            datasetId: '123'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return false;\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async id => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => id === item.id);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  const columns = [{\n    title: 'NAME',\n    dataIndex: 'name',\n    width: '25%',\n    editable: true\n  }, {\n    title: 'DESCRIPTION',\n    dataIndex: 'description',\n    width: '15%',\n    editable: true\n  }, {\n    title: 'LEAD',\n    dataIndex: 'lead',\n    width: '15%',\n    editable: true\n  }, {\n    title: 'OPERATION',\n    width: '15%',\n    dataIndex: 'operation',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:\",\n        onClick: () => save(record.id),\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, \"Cancel\"))) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        disabled: editingKey !== '',\n        onClick: () => edit(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => setUserInput(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, \"Open\"));\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, openProject()), /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: data,\n    columns: mergedColumns,\n    rowClassName: \"editable-row\",\n    pagination: {\n      onChange: cancel\n    },\n    style: {\n      width: '80%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default withRouter(connect(mapStateToProps)(ProjectTableWide));","map":{"version":3,"sources":["/Users/harmbruins/Documents/Ventus Projects/testprofessionalfrontend/src/components/kit/widgets/Tables/implementations/ProjectTableWide/index.js"],"names":["React","useState","Table","Input","InputNumber","Popconfirm","Form","Button","Redirect","withRouter","connect","mapStateToProps","service","projects","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","ProjectTableWide","props","form","useForm","data","setData","editingKey","setEditingKey","userInput","setUserInput","isEditing","id","edit","setFieldsValue","name","lead","sessionStorageStoreDataSetId","sessionStorage","setItem","console","log","getItem","openProject","pathname","state","datasetId","cancel","save","row","validateFields","newData","findIndex","item","splice","push","errInfo","columns","width","editable","render","_","marginRight","mergedColumns","map","col","onCell","body","cell","onChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,WAAvB,EAAoCC,UAApC,EAAgDC,IAAhD,EAAsDC,MAAtD,QAAoE,MAApE;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAkB;AACxCC,EAAAA,QAAQ,EAAED,OAAO,CAACC;AADsB,CAAlB,CAAxB;;AAIA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,OADoB;AAEpBC,EAAAA,SAFoB;AAGpBC,EAAAA,KAHoB;AAIpBC,EAAAA,SAJoB;AAKpBC,EAAAA,MALoB;AAMpBC,EAAAA,KANoB;AAOpBC,EAAAA,QAPoB;AAQpB,KAAGC;AARiB,CAAD,KASf;AACJ,QAAMC,SAAS,GAAGL,SAAS,KAAK,QAAd,gBAAyB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,gBAA2C,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7D;AACA,sBACE,4CAAQI,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGP,OAAO,gBACN,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAEC,SADR;AAEE,IAAA,KAAK,EAAE;AACLQ,MAAAA,MAAM,EAAE;AADH,KAFT;AAKE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,QAAQ,EAAE,IADZ;AAEEC,MAAAA,OAAO,EAAG,gBAAeT,KAAM;AAFjC,KADK,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYGM,SAZH,CADM,GAgBNF,QAjBJ,CADF;AAsBD,CAjCD;;AAmCA,MAAMM,gBAAgB,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAEf,IAAAA,QAAQ,GAAG;AAAb,MAAoBe,KAA1B;AACA,QAAM,CAACC,IAAD,IAASvB,IAAI,CAACwB,OAAL,EAAf;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB/B,QAAQ,CAACY,QAAD,CAAhC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACkC,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMoC,SAAS,GAAGlB,MAAM,IAAIA,MAAM,CAACmB,EAAP,KAAcL,UAA1C;;AAEA,QAAMM,IAAI,GAAGpB,MAAM,IAAI;AACrBU,IAAAA,IAAI,CAACW,cAAL,CAAoB;AAClBC,MAAAA,IAAI,EAAE,EADY;AAElBC,MAAAA,IAAI,EAAE,EAFY;AAGlB,SAAGvB;AAHe,KAApB;AAKAe,IAAAA,aAAa,CAACf,MAAM,CAACmB,EAAR,CAAb;AACD,GAPD;;AASA,QAAMK,4BAA4B,GAAG,MAAM;AACzCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,WAAvB,EAAoC,CAApC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,cAAc,CAACI,OAAf,CAAuB,WAAvB,CAAZ;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAId,SAAS,KAAK,IAAlB,EAAwB;AACtBW,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAJ,MAAAA,4BAA4B;AAC5B,0BACE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFO,UAAAA,QAAQ,EAAE,0BADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;AACD,WAAO,KAAP;AACD,GAdD;;AAgBA,QAAMC,MAAM,GAAG,MAAM;AACnBnB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAFD;;AAIA,QAAMoB,IAAI,GAAG,MAAMhB,EAAN,IAAY;AACvB,QAAI;AACF,YAAMiB,GAAG,GAAG,MAAM1B,IAAI,CAAC2B,cAAL,EAAlB;AACA,YAAMC,OAAO,GAAG,CAAC,GAAG1B,IAAJ,CAAhB;AACA,YAAMX,KAAK,GAAGqC,OAAO,CAACC,SAAR,CAAkBC,IAAI,IAAIrB,EAAE,KAAKqB,IAAI,CAACrB,EAAtC,CAAd;;AAEA,UAAIlB,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,cAAMuC,IAAI,GAAGF,OAAO,CAACrC,KAAD,CAApB;AACAqC,QAAAA,OAAO,CAACG,MAAR,CAAexC,KAAf,EAAsB,CAAtB,EAAyB,EAAE,GAAGuC,IAAL;AAAW,aAAGJ;AAAd,SAAzB;AACAvB,QAAAA,OAAO,CAACyB,OAAD,CAAP;AACAvB,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD,OALD,MAKO;AACLuB,QAAAA,OAAO,CAACI,IAAR,CAAaN,GAAb;AACAvB,QAAAA,OAAO,CAACyB,OAAD,CAAP;AACAvB,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,KAfD,CAeE,OAAO4B,OAAP,EAAgB;AAChBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCe,OAAhC;AACD;AACF,GAnBD;;AAqBA,QAAMC,OAAO,GAAG,CACd;AACE9C,IAAAA,KAAK,EAAE,MADT;AAEED,IAAAA,SAAS,EAAE,MAFb;AAGEgD,IAAAA,KAAK,EAAE,KAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GADc,EAOd;AACEhD,IAAAA,KAAK,EAAE,aADT;AAEED,IAAAA,SAAS,EAAE,aAFb;AAGEgD,IAAAA,KAAK,EAAE,KAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAPc,EAad;AACEhD,IAAAA,KAAK,EAAE,MADT;AAEED,IAAAA,SAAS,EAAE,MAFb;AAGEgD,IAAAA,KAAK,EAAE,KAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAbc,EAmBd;AACEhD,IAAAA,KAAK,EAAE,WADT;AAEE+C,IAAAA,KAAK,EAAE,KAFT;AAGEhD,IAAAA,SAAS,EAAE,WAHb;AAIEkD,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIhD,MAAJ,KAAe;AACrB,YAAM8C,QAAQ,GAAG5B,SAAS,CAAClB,MAAD,CAA1B;AACA,aAAO8C,QAAQ,gBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAE,MAAMX,IAAI,CAACnC,MAAM,CAACmB,EAAR,CAFrB;AAGE,QAAA,KAAK,EAAE;AACL8B,UAAAA,WAAW,EAAE;AADR,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,iBAAlB;AAAoC,QAAA,SAAS,EAAEf,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAVF,CADa,gBAgBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEpB,UAAU,KAAK,EAAjC;AAAqC,QAAA,OAAO,EAAE,MAAMM,IAAI,CAACpB,MAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMiB,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CAhBF;AAuBD;AA7BH,GAnBc,CAAhB;AAmDA,QAAMiC,aAAa,GAAGN,OAAO,CAACO,GAAR,CAAYC,GAAG,IAAI;AACvC,QAAI,CAACA,GAAG,CAACN,QAAT,EAAmB;AACjB,aAAOM,GAAP;AACD;;AAED,WAAO,EACL,GAAGA,GADE;AAELC,MAAAA,MAAM,EAAErD,MAAM,KAAK;AACjBA,QAAAA,MADiB;AAEjBD,QAAAA,SAAS,EAAEqD,GAAG,CAACvD,SAAJ,KAAkB,KAAlB,GAA0B,QAA1B,GAAqC,MAF/B;AAGjBA,QAAAA,SAAS,EAAEuD,GAAG,CAACvD,SAHE;AAIjBC,QAAAA,KAAK,EAAEsD,GAAG,CAACtD,KAJM;AAKjBF,QAAAA,OAAO,EAAEsB,SAAS,CAAClB,MAAD;AALD,OAAL;AAFT,KAAP;AAUD,GAfqB,CAAtB;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM8B,WAAW,EAAjB,CADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEpB,IAAZ;AAAkB,IAAA,SAAS,EAAE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,UAAU,EAAE;AACV4C,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE5D;AADF;AADI,KADd;AAME,IAAA,QAAQ,MANV;AAOE,IAAA,UAAU,EAAEiB,IAPd;AAQE,IAAA,OAAO,EAAEsC,aARX;AASE,IAAA,YAAY,EAAC,cATf;AAUE,IAAA,UAAU,EAAE;AACVM,MAAAA,QAAQ,EAAEtB;AADA,KAVd;AAaE,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,EAAE;AAAT,KAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAsBD,CA3JD;;AA4JA,eAAevD,UAAU,CAACC,OAAO,CAACC,eAAD,CAAP,CAAyBgB,gBAAzB,CAAD,CAAzB","sourcesContent":["import React, { useState } from 'react'\nimport 'antd/dist/antd.css'\nimport { Table, Input, InputNumber, Popconfirm, Form, Button } from 'antd'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = ({ service }) => ({\n  projects: service.projects,\n})\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  )\n}\n\nconst ProjectTableWide = props => {\n  const { projects = [] } = props\n  const [form] = Form.useForm()\n  const [data, setData] = useState(projects)\n  const [editingKey, setEditingKey] = useState('')\n\n  const [userInput, setUserInput] = useState(false)\n\n  const isEditing = record => record.id === editingKey\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      lead: '',\n      ...record,\n    })\n    setEditingKey(record.id)\n  }\n\n  const sessionStorageStoreDataSetId = () => {\n    sessionStorage.setItem('datasetId', 1)\n    console.log(sessionStorage.getItem('datasetId'))\n  }\n\n  const openProject = () => {\n    if (userInput === true) {\n      console.log('open project')\n      sessionStorageStoreDataSetId()\n      return (\n        <Redirect\n          to={{\n            pathname: '/apps/dataset-management',\n            state: { datasetId: '123' },\n          }}\n        />\n      )\n    }\n    return false\n  }\n\n  const cancel = () => {\n    setEditingKey('')\n  }\n\n  const save = async id => {\n    try {\n      const row = await form.validateFields()\n      const newData = [...data]\n      const index = newData.findIndex(item => id === item.id)\n\n      if (index > -1) {\n        const item = newData[index]\n        newData.splice(index, 1, { ...item, ...row })\n        setData(newData)\n        setEditingKey('')\n      } else {\n        newData.push(row)\n        setData(newData)\n        setEditingKey('')\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo)\n    }\n  }\n\n  const columns = [\n    {\n      title: 'NAME',\n      dataIndex: 'name',\n      width: '25%',\n      editable: true,\n    },\n    {\n      title: 'DESCRIPTION',\n      dataIndex: 'description',\n      width: '15%',\n      editable: true,\n    },\n    {\n      title: 'LEAD',\n      dataIndex: 'lead',\n      width: '15%',\n      editable: true,\n    },\n    {\n      title: 'OPERATION',\n      width: '15%',\n      dataIndex: 'operation',\n      render: (_, record) => {\n        const editable = isEditing(record)\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:\"\n              onClick={() => save(record.id)}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <div>\n            <Button disabled={editingKey !== ''} onClick={() => edit(record)}>\n              Edit\n            </Button>\n            <Button onClick={() => setUserInput(true)}>Open</Button>\n          </div>\n        )\n      },\n    },\n  ]\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col\n    }\n\n    return {\n      ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    }\n  })\n\n  return (\n    <div>\n      <div>{openProject()}</div>\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          bordered\n          dataSource={data}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: cancel,\n          }}\n          style={{ width: '80%' }}\n        />\n      </Form>\n    </div>\n  )\n}\nexport default withRouter(connect(mapStateToProps)(ProjectTableWide))\n"]},"metadata":{},"sourceType":"module"}