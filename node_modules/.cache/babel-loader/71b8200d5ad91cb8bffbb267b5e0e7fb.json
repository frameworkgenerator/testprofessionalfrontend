{"ast":null,"code":"var _jsxFileName = \"/Users/harmbruins/Documents/Ventus Projects/testprofessionalfrontend/src/components/kit/widgets/Tables/implementations/DevelopersTableWide/index.js\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Select } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nconst {\n  Option\n} = Select;\n\nconst mapStateToProps = ({\n  service\n}) => ({\n  fields: service.fields,\n  dropDown: service.dropDown\n});\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? /*#__PURE__*/React.createElement(InputNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 46\n    }\n  }) : /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 64\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), editing ? /*#__PURE__*/React.createElement(Form.Item, {\n    name: dataIndex,\n    style: {\n      margin: 0\n    },\n    rules: [{\n      required: true,\n      message: `Please Input ${title}!`\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, inputNode) : children);\n};\n\nconst DevelopersTableWide = props => {\n  const {\n    fields = [],\n    dropDown = []\n  } = props;\n  const [form] = Form.useForm();\n  const [data, setData] = useState(fields);\n  const [action] = useState(dropDown);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = record => record.id === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      age: '',\n      address: '',\n      ...record\n    });\n    setEditingKey(record.id);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async id => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => id === item.id);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  const columns = [{\n    title: 'OBJECTNAME',\n    dataIndex: 'objectname',\n    width: '15%',\n    editable: true,\n    sorter: true\n  }, {\n    title: 'OBJECTSELECTOR',\n    dataIndex: 'objectselector',\n    width: '15%',\n    editable: true\n  }, {\n    title: 'OBJECTACTION',\n    dataIndex: 'objectaction',\n    width: '15%',\n    editable: true,\n    render: text => {\n      return /*#__PURE__*/React.createElement(Select, {\n        defaultValue: text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, action.map((obj, index) => /*#__PURE__*/React.createElement(Option, {\n        value: obj,\n        key: index.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, obj)));\n    }\n  }, {\n    title: 'DEFAULTVALUE',\n    dataIndex: 'defaultvalue',\n    width: '15%',\n    editable: true,\n    sorter: true\n  }, {\n    title: 'VALUELENGTH',\n    dataIndex: 'valuelength',\n    width: '15%',\n    editable: true\n  }, {\n    title: 'VALUERANGE',\n    dataIndex: 'valuerange',\n    width: '15%',\n    editable: true\n  }, {\n    title: 'OPERATION',\n    dataIndex: 'operation',\n    render: (_, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:;\",\n        onClick: () => save(record.id),\n        style: {\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }\n      }, \"Save\"), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Sure to cancel?\",\n        onConfirm: cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, \"Cancel\"))) : /*#__PURE__*/React.createElement(Button, {\n        disabled: editingKey !== '',\n        onClick: () => edit(record),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, \"Edit\");\n    }\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    component: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    components: {\n      body: {\n        cell: EditableCell\n      }\n    },\n    bordered: true,\n    dataSource: data,\n    columns: mergedColumns,\n    rowClassName: \"editable-row\",\n    pagination: {\n      onChange: cancel\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default withRouter(connect(mapStateToProps)(DevelopersTableWide));","map":{"version":3,"sources":["/Users/harmbruins/Documents/Ventus Projects/testprofessionalfrontend/src/components/kit/widgets/Tables/implementations/DevelopersTableWide/index.js"],"names":["React","useState","Table","Input","InputNumber","Popconfirm","Form","Button","Select","withRouter","connect","Option","mapStateToProps","service","fields","dropDown","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","DevelopersTableWide","props","form","useForm","data","setData","action","editingKey","setEditingKey","isEditing","id","edit","setFieldsValue","name","age","address","cancel","save","row","validateFields","newData","findIndex","item","splice","push","errInfo","console","log","columns","width","editable","sorter","render","text","map","obj","toString","_","marginRight","mergedColumns","col","onCell","body","cell","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport 'antd/dist/antd.css'\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Select } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nconst { Option } = Select\n\nconst mapStateToProps = ({ service }) => ({\n  fields: service.fields,\n  dropDown: service.dropDown,\n})\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  )\n}\n\nconst DevelopersTableWide = props => {\n  const { fields = [], dropDown = [] } = props\n  const [form] = Form.useForm()\n  const [data, setData] = useState(fields)\n  const [action] = useState(dropDown)\n  const [editingKey, setEditingKey] = useState('')\n\n  const isEditing = record => record.id === editingKey\n\n  const edit = record => {\n    form.setFieldsValue({\n      name: '',\n      age: '',\n      address: '',\n      ...record,\n    })\n    setEditingKey(record.id)\n  }\n\n  const cancel = () => {\n    setEditingKey('')\n  }\n\n  const save = async id => {\n    try {\n      const row = await form.validateFields()\n      const newData = [...data]\n      const index = newData.findIndex(item => id === item.id)\n\n      if (index > -1) {\n        const item = newData[index]\n        newData.splice(index, 1, { ...item, ...row })\n        setData(newData)\n        setEditingKey('')\n      } else {\n        newData.push(row)\n        setData(newData)\n        setEditingKey('')\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo)\n    }\n  }\n\n  const columns = [\n    {\n      title: 'OBJECTNAME',\n      dataIndex: 'objectname',\n      width: '15%',\n      editable: true,\n      sorter: true,\n    },\n    {\n      title: 'OBJECTSELECTOR',\n      dataIndex: 'objectselector',\n      width: '15%',\n      editable: true,\n    },\n    {\n      title: 'OBJECTACTION',\n      dataIndex: 'objectaction',\n      width: '15%',\n      editable: true,\n      render: text => {\n        return (\n          <Select defaultValue={text}>\n            {action.map((obj, index) => (\n              <Option value={obj} key={index.toString()}>\n                {obj}\n              </Option>\n            ))}\n          </Select>\n        )\n      },\n    },\n    {\n      title: 'DEFAULTVALUE',\n      dataIndex: 'defaultvalue',\n      width: '15%',\n      editable: true,\n      sorter: true,\n    },\n    {\n      title: 'VALUELENGTH',\n      dataIndex: 'valuelength',\n      width: '15%',\n      editable: true,\n    },\n    {\n      title: 'VALUERANGE',\n      dataIndex: 'valuerange',\n      width: '15%',\n      editable: true,\n    },\n    {\n      title: 'OPERATION',\n      dataIndex: 'operation',\n      render: (_, record) => {\n        const editable = isEditing(record)\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:;\"\n              onClick={() => save(record.id)}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a>Cancel</a>\n            </Popconfirm>\n          </span>\n        ) : (\n          <Button disabled={editingKey !== ''} onClick={() => edit(record)}>\n            Edit\n          </Button>\n        )\n      },\n    },\n  ]\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col\n    }\n\n    return {\n      ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    }\n  })\n  return (\n    <Form form={form} component={false}>\n      <Table\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        bordered\n        dataSource={data}\n        columns={mergedColumns}\n        rowClassName=\"editable-row\"\n        pagination={{\n          onChange: cancel,\n        }}\n      />\n    </Form>\n  )\n}\nexport default withRouter(connect(mapStateToProps)(DevelopersTableWide))\n"]},"metadata":{},"sourceType":"module"}